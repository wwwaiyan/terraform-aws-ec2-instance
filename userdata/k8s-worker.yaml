#cloud-config

package_update: true
package_upgrade: true

packages:
  - net-tools

runcmd:
  - |
    ##Create devops user
    sudo useradd -m -s /bin/bash devops
    sudo usermod -aG sudo devops
    echo "devops:devops" | sudo chpasswd

    ##setting up kubectl
    sudo snap install kubectl --classic
    #bash-completion
    sudo apt-get install bash-completion
    source /usr/share/bash-completion/bash_completion
    echo 'source <(kubectl completion bash)' >> /home/devops/.bashrc
    #alias for kubectl
    echo 'alias k=kubectl' >> /home/devops/.bashrc
    echo 'complete -o default -F __start_kubectl k' >> /home/devops/.bashrc

    # # Configure SSH
    # sudo sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
    # sudo systemctl restart sshd
    
    sudo swapoff -a
    sudo sed -i '/ swap / s/^/#/' /etc/fstab

    #Enable cri-o repositories for version 1.28
    
    sudo apt-get update
    # apt-transport-https may be a dummy package; if so, you can skip that package
    sudo apt-get install -y apt-transport-https ca-certificates curl gpg

    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    # This overwrites any existing configuration in /etc/apt/sources.list.d/kubernetes.list
    echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

    sudo apt-get update
    sudo apt-get install -y kubelet kubeadm kubectl
    sudo apt-mark hold kubelet kubeadm kubectl

    OS="xUbuntu_22.04"

    VERSION="1.28"

    cat <<EOF | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
    deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/ /
    EOF
    cat <<EOF | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:$VERSION.list
    deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$VERSION/$OS/ /
    EOF
    #Add the GPG keys for CRI-O to the systemâ€™s list of trusted keys.

    curl -L https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:$VERSION/$OS/Release.key | sudo apt-key --keyring /etc/apt/trusted.gpg.d/libcontainers.gpg add -
    curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/Release.key | sudo apt-key --keyring /etc/apt/trusted.gpg.d/libcontainers.gpg add -
    Update and install crio and crio-tools.

    sudo apt-get update
    sudo apt-get install cri-o cri-o-runc cri-tools -y

    #Reload the systemd configurations and enable cri-o.

    sudo systemctl daemon-reload
    sudo systemctl enable crio --now

    cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
    overlay
    br_netfilter
    EOF

    sudo modprobe overlay
    sudo modprobe br_netfilter

    # sysctl params required by setup, params persist across reboots
    cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
    net.bridge.bridge-nf-call-iptables  = 1
    net.bridge.bridge-nf-call-ip6tables = 1
    net.ipv4.ip_forward                 = 1
    EOF

    # Apply sysctl params without reboot
    sudo sysctl --system
    sudo rm -rf /etc/kubernetes/pki/ca.crt